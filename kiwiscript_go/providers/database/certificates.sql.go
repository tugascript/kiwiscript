// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: certificates.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createCertificate = `-- name: CreateCertificate :one
INSERT INTO "certificates" (
    "id",
    "user_id",
    "language_slug",
    "series_slug",
    "completed_at"
) VALUES (
    $1,
    $2,
    $3,
    $4,
    now()
) RETURNING id, user_id, language_slug, series_title, series_slug, completed_at, created_at, updated_at
`

type CreateCertificateParams struct {
	ID           uuid.UUID
	UserID       int32
	LanguageSlug string
	SeriesSlug   string
}

func (q *Queries) CreateCertificate(ctx context.Context, arg CreateCertificateParams) (Certificate, error) {
	row := q.db.QueryRow(ctx, createCertificate,
		arg.ID,
		arg.UserID,
		arg.LanguageSlug,
		arg.SeriesSlug,
	)
	var i Certificate
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.LanguageSlug,
		&i.SeriesTitle,
		&i.SeriesSlug,
		&i.CompletedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const findCertificateBySeriesSlugAndUserID = `-- name: FindCertificateBySeriesSlugAndUserID :one

SELECT id, user_id, language_slug, series_title, series_slug, completed_at, created_at, updated_at FROM "certificates"
WHERE "user_id" = $1 AND "series_slug" = $2
LIMIT 1
`

type FindCertificateBySeriesSlugAndUserIDParams struct {
	UserID     int32
	SeriesSlug string
}

// Copyright (C) 2024 Afonso Barracha
//
// This file is part of KiwiScript.
//
// KiwiScript is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// KiwiScript is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with KiwiScript.  If not, see <https://www.gnu.org/licenses/>.
func (q *Queries) FindCertificateBySeriesSlugAndUserID(ctx context.Context, arg FindCertificateBySeriesSlugAndUserIDParams) (Certificate, error) {
	row := q.db.QueryRow(ctx, findCertificateBySeriesSlugAndUserID, arg.UserID, arg.SeriesSlug)
	var i Certificate
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.LanguageSlug,
		&i.SeriesTitle,
		&i.SeriesSlug,
		&i.CompletedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
